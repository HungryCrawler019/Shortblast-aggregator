generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or any other supported provider, e.g., mysql, sqlite, etc.  
  url      = env("DATABASE_URL")
}

model Pools {
  id       Int     @id @default(autoincrement())
  address  String  @unique @db.VarChar(50)
  name     String  @db.VarChar(50)
  isClosed Boolean @default(false) @map("is_closed")

  @@map("pools")
  @@ignore
}

model Token {
  id         BigInt  @id @default(autoincrement())
  address    String  @unique @db.VarChar(50)
  decimals   Int     @default(9) @db.SmallInt
  unitAmount BigInt  @default(1000000000) @map("unit_amount")
  name       String? @db.VarChar(32)
  symbol     String? @db.VarChar(10)
  image      String? @db.VarChar(10)

  logs   TradingLog[]
  prices TokenPrice[]

  @@map("tokens")
}

model TradingLog {
  id        BigInt      @id @default(autoincrement())
  // signature String      @db.VarChar(100)
  tokenId   BigInt      @map("token_id")
  userId    Int?        @map("user_id")
  amount    BigInt
  solAmount BigInt      @default(0) @map("sol_amount")
  kind      TradingKind

  token Token @relation(fields: [tokenId], references: [id])
  user  User? @relation(fields: [userId], references: [id])

  @@unique([tokenId, userId])
  @@map("trading_logs")
}

model User {
  id         Int     @id @default(autoincrement())
  address    String  @unique @db.VarChar(50)
  username   String? @unique @db.VarChar(20)
  referrerId Int?    @map("referrer_id")

  logs TradingLog[]

  @@map("users")
}

model TokenPrice {
  id        BigInt   @id @default(autoincrement())
  tokenId   BigInt   @map("token_id")
  price     Decimal  @db.Decimal(26, 18)
  currency  String   @default("sol")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp()

  token Token @relation(fields: [tokenId], references: [id])

  @@map("token_prices")
}

enum TradingKind {
  BUY  @map("buy")
  SELL @map("sell")

  @@map("trading_kind_enum")
}
